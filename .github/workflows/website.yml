name: Website
on:
  push:
    branches:
      - gh-pages
      - main
  pull_request: []
jobs:
  build-website:
    if: ${{ !endsWith(github.repository, '/styles') }}
    runs-on: ubuntu-20.04
    env:
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install GitHub Pages, Bundler, and kramdown gems
        run: |
          gem install github-pages bundler kramdown kramdown-parser-gfm

      - name: Install Python modules
        run: |
          python3 -m pip install --upgrade pip setuptools wheel pyyaml==5.3.1 requests

      - name: Checkout the lesson
        uses: actions/checkout@master
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Render the markdown and confirm that the site can be built
        run: make site

      - name: Checkout github pages
        if: ${{ github.event_name == 'push' && steps.check-rmd.outputs.count != 0 && github.ref != 'refs/heads/gh-pages'}}
        uses: actions/checkout@master
        with:
          ref: gh-pages
          path: gh-pages

      - name: Commit and Push
        if: ${{ github.event_name == 'push' && steps.check-rmd.outputs.count != 0 && github.ref != 'refs/heads/gh-pages'}}
        run: |
          # clean up gh-pages
          cd gh-pages
          git rm -rf .           # remove all previous files
          git restore --staged . # remove things from the stage
          cd ..
          # copy everything into gh-pages site
          cp -r `ls -A | grep -v 'gh-pages' | grep -v '.git' | grep -v '.bundle/' | grep -v '_site'` gh-pages
          # move into gh-pages, add, commit, and push
          cd gh-pages
          # setup git
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add -A .
          git commit --allow-empty -m "[Github Actions] render website (via ${{ github.sha }})"
          git push origin gh-pages
          # return
          cd ..

      - run: make lesson-check-all
        if: always()
